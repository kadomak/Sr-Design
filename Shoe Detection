# importing the necessary libraries
import cv2
import imutils
import numpy as np

# Creating a VideoCapture object to read the video
cap = cv2.VideoCapture('trial_10.mp4')


# Loop until the end of the video
while (cap.isOpened()):

    # Capture frame-by-frame
    ret, frame = cap.read()

    #crop frame to only see feet and markers
    cropped_frame = frame[260:440,0:2704]

    # Display the resulting frame
    cropped_frame = cv2.resize(cropped_frame, (540, 380), fx=0, fy=0,
                       interpolation=cv2.INTER_CUBIC)
    cv2.imshow('Frame', cropped_frame)

    edge_detect = cv2.Canny(cropped_frame, 100, 200)
    cv2.imshow('Edge detect', edge_detect)

    # conversion of BGR to grayscale is necessary to apply this operation
    #gray = cv2.cvtColor(cropped_frame, cv2.COLOR_BGR2GRAY)

    # adaptive thresholding to use different threshold
    # values on different regions of the frame.
    #Thresh = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C,
     #                              cv2.THRESH_BINARY_INV, 11, 2)

    #cv2.imshow('Thresh', Thresh)

    # find contours in the edge map
    cnts = cv2.findContours(edge_detect.copy(), cv2.RETR_EXTERNAL,
                            cv2.CHAIN_APPROX_SIMPLE)
    cnts = imutils.grab_contours(cnts)

     #define q as the exit button
    if cv2.waitKey(25) & 0xFF == ord('q'):
        break

# release the video capture object
cap.release()
# Closes all the windows currently opened.
cv2.destroyAllWindows()
